/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tr.edu.comu.cinema;

import java.util.List;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import org.hibernate.Session;
import entity.Seat;
import entity.TicketSeller;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.hibernate.HibernateException;
import org.hibernate.Transaction;

/**
 * created on Dec 6, 2019 4:43:17 PM
 *
 * @author bayramcicek
 */
public class Ticket_ReserveSeatFrame extends javax.swing.JFrame {

    static Session session;
    private static TicketSeller current_user;

    /**
     * Creates new form ReserveSeatFrame
     *
     * @param current_user
     */
    public Ticket_ReserveSeatFrame(TicketSeller current_user) {
        initComponents();
        show_seat_data();
        Ticket_ReserveSeatFrame.current_user = current_user;
        ticket_seller_username_jTextField.setText(Ticket_ReserveSeatFrame.current_user.getUsername());
    }

    private static <Seat> List<Seat> loadAllData(Class<Seat> type, Session session) {

        CriteriaBuilder builder;
        builder = session.getCriteriaBuilder();
        CriteriaQuery<Seat> criteria = builder.createQuery(type);
        criteria.from(type);
        List<Seat> data;
        data = session.createQuery(criteria).getResultList();
        return data;

    }

    private void show_seat_data() {

        try {
            session = HibernateUtil.getSessionFactory().openSession();
        } catch (HibernateException e) {
            JOptionPane.showMessageDialog(null, e);
        }

        List<Seat> seat_data = loadAllData(Seat.class, session);
        session.close();

        DefaultTableModel model = (DefaultTableModel) seat_jTable.getModel();
        Object[] row = new Object[3];

        for (int i = 0; i < seat_data.size(); i++) {
            row[0] = seat_data.get(i).getSeatNo();
            row[1] = seat_data.get(i).getSeatPrice();
            row[2] = seat_data.get(i).getTicketSeller().getUsername();
            model.addRow(row);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        seat_jTable = new javax.swing.JTable();
        insert_jButton = new javax.swing.JButton();
        update_jButton = new javax.swing.JButton();
        delete_jButton = new javax.swing.JButton();
        refresh_jButton = new javax.swing.JButton();
        seat_no_jLabel = new javax.swing.JLabel();
        seat_no_jTextField = new javax.swing.JTextField();
        seat_price_jTextField = new javax.swing.JTextField();
        seat_price_jLabel = new javax.swing.JLabel();
        ticket_seller_username_jTextField = new javax.swing.JTextField();
        ticket_seller_username_jLabel = new javax.swing.JLabel();
        alert_seat_price_jLabel = new javax.swing.JLabel();
        reserve_jLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        seat_jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Seat No", "Seat Price", "Ticker Seller Username"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        seat_jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                seat_jTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(seat_jTable);
        if (seat_jTable.getColumnModel().getColumnCount() > 0) {
            seat_jTable.getColumnModel().getColumn(0).setResizable(false);
            seat_jTable.getColumnModel().getColumn(1).setResizable(false);
            seat_jTable.getColumnModel().getColumn(2).setResizable(false);
        }

        insert_jButton.setText("INSERT");
        insert_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insert_jButtonActionPerformed(evt);
            }
        });

        update_jButton.setText("UPDATE");
        update_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_jButtonActionPerformed(evt);
            }
        });

        delete_jButton.setText("DELETE");
        delete_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_jButtonActionPerformed(evt);
            }
        });

        refresh_jButton.setText("REFRESH");
        refresh_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refresh_jButtonActionPerformed(evt);
            }
        });

        seat_no_jLabel.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        seat_no_jLabel.setText("Seat No:");

        seat_no_jTextField.setEnabled(false);
        seat_no_jTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seat_no_jTextFieldActionPerformed(evt);
            }
        });

        seat_price_jTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seat_price_jTextFieldActionPerformed(evt);
            }
        });
        seat_price_jTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                seat_price_jTextFieldKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                seat_price_jTextFieldKeyReleased(evt);
            }
        });

        seat_price_jLabel.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        seat_price_jLabel.setText("Seat Price:");

        ticket_seller_username_jTextField.setEnabled(false);
        ticket_seller_username_jTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ticket_seller_username_jTextFieldActionPerformed(evt);
            }
        });

        ticket_seller_username_jLabel.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        ticket_seller_username_jLabel.setText("Ticket Seller Username:");

        alert_seat_price_jLabel.setFont(new java.awt.Font("Ubuntu", 0, 11)); // NOI18N

        reserve_jLabel.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        reserve_jLabel.setText("Reserve a Seat");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(refresh_jButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(insert_jButton)
                        .addGap(28, 28, 28)
                        .addComponent(update_jButton)
                        .addGap(27, 27, 27)
                        .addComponent(delete_jButton))
                    .addComponent(seat_no_jLabel)
                    .addComponent(seat_no_jTextField)
                    .addComponent(seat_price_jLabel)
                    .addComponent(ticket_seller_username_jLabel)
                    .addComponent(seat_price_jTextField)
                    .addComponent(ticket_seller_username_jTextField)
                    .addComponent(alert_seat_price_jLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(reserve_jLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(seat_no_jLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seat_no_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(seat_price_jLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seat_price_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(alert_seat_price_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ticket_seller_username_jLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ticket_seller_username_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(reserve_jLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(insert_jButton)
                            .addComponent(update_jButton)
                            .addComponent(delete_jButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(refresh_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void insert_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insert_jButtonActionPerformed
        // TODO add your handling code here: INSERT
        int control;
        int parsed = 0;

        if ("".equals(seat_price_jTextField.getText())) {
            alert_seat_price_jLabel.setText("Please fill out here");
            control = -1;
        } else {
            try {
                Integer.parseInt(seat_price_jTextField.getText());
                parsed = Integer.parseInt(seat_price_jTextField.getText());
                control = 1;
            } catch (java.lang.NumberFormatException e) {
                alert_seat_price_jLabel.setText("Please fill out an Integer value !");
                control = -1;
            }

        }
        if (control == 1) {
            try {

                Seat seat = new Seat(current_user, parsed);
                session = HibernateUtil.getSessionFactory().openSession();
                Transaction tx;
                tx = session.beginTransaction();
                session.save(seat);
                tx.commit();
                session.close();
                
                seat_no_jTextField.setText("");
                alert_seat_price_jLabel.setText("INSERTED Successfully. Click REFRESH to see changes.");

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }

        seat_price_jTextField.setText("");

    }//GEN-LAST:event_insert_jButtonActionPerformed

    private void update_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_jButtonActionPerformed
        // TODO add your handling code here: UPDATE

        int control = -1;
        int parsed = 0;
        int row = seat_jTable.getSelectedRow();
        int current_id_value;
        
        if (row < 0){
            alert_seat_price_jLabel.setText("Please select a row from table");
        } else if ("".equals(seat_price_jTextField.getText())) {
            alert_seat_price_jLabel.setText("Please fill out here");
        } else {
            
            try {
                Integer.parseInt(seat_price_jTextField.getText());
                parsed = Integer.parseInt(seat_price_jTextField.getText());
                control = 1;
            } catch (java.lang.NumberFormatException e) {
                alert_seat_price_jLabel.setText("Please fill out an Integer value !");
            }
        }
        
        if (control == 1) {
            try {
                
                session = HibernateUtil.getSessionFactory().openSession();
                current_id_value = Integer.parseInt(seat_jTable.getModel().getValueAt(row, 0).toString());
                Object obj = session.load(Seat.class, current_id_value);
                Seat seat = (Seat)obj;

                Transaction tx;
                tx = session.beginTransaction();
                seat.setSeatPrice(parsed);
                tx.commit();
                session.close();
                
                seat_no_jTextField.setText("");
                alert_seat_price_jLabel.setText("UPDATED Successfully. Click REFRESH to see changes.");

            } catch (NumberFormatException | HibernateException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }

        seat_price_jTextField.setText("");

    }//GEN-LAST:event_update_jButtonActionPerformed

    private void delete_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_jButtonActionPerformed

        int row = seat_jTable.getSelectedRow();
        int current_id_value;
        
        if (row < 0){
            alert_seat_price_jLabel.setText("Please select a row from table");
        } else {
            try {
                session = HibernateUtil.getSessionFactory().openSession();
                current_id_value = Integer.parseInt(seat_jTable.getModel().getValueAt(row, 0).toString());
                Object obj = session.load(Seat.class, current_id_value);
                Seat seat = (Seat)obj;
                
                Transaction tx;
                tx = session.beginTransaction();
                session.delete(seat);
                tx.commit();
                session.close();
                
                seat_no_jTextField.setText("");
                alert_seat_price_jLabel.setText("DELETED Successfully. Click REFRESH to see changes.");

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        } 
        
        seat_price_jTextField.setText("");

    }//GEN-LAST:event_delete_jButtonActionPerformed

    private void refresh_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refresh_jButtonActionPerformed
        // TODO add your handling code here: REFRESH
        DefaultTableModel model = (DefaultTableModel) seat_jTable.getModel();
        model.setRowCount(0);
        show_seat_data();
        seat_no_jTextField.setText("");
        seat_price_jTextField.setText("");
    }//GEN-LAST:event_refresh_jButtonActionPerformed

    private void seat_no_jTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seat_no_jTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seat_no_jTextFieldActionPerformed

    private void seat_price_jTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seat_price_jTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seat_price_jTextFieldActionPerformed

    private void ticket_seller_username_jTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ticket_seller_username_jTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ticket_seller_username_jTextFieldActionPerformed

    private void seat_jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_seat_jTableMouseClicked
        // TODO add your handling code here:
        int i = seat_jTable.getSelectedRow();
        TableModel model = seat_jTable.getModel();
        alert_seat_price_jLabel.setText("");
        seat_no_jTextField.setText(model.getValueAt(i, 0).toString());
        seat_price_jTextField.setText(model.getValueAt(i, 1).toString());
    }//GEN-LAST:event_seat_jTableMouseClicked

    private void seat_price_jTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_seat_price_jTextFieldKeyReleased
        // TODO add your handling code here:
        alert_seat_price_jLabel.setText("");
    }//GEN-LAST:event_seat_price_jTextFieldKeyReleased

    private void seat_price_jTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_seat_price_jTextFieldKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_seat_price_jTextFieldKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ticket_ReserveSeatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ticket_ReserveSeatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ticket_ReserveSeatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ticket_ReserveSeatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Ticket_ReserveSeatFrame(current_user).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel alert_seat_price_jLabel;
    private javax.swing.JButton delete_jButton;
    private javax.swing.JButton insert_jButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refresh_jButton;
    private javax.swing.JLabel reserve_jLabel;
    private javax.swing.JTable seat_jTable;
    private javax.swing.JLabel seat_no_jLabel;
    private javax.swing.JTextField seat_no_jTextField;
    private javax.swing.JLabel seat_price_jLabel;
    private javax.swing.JTextField seat_price_jTextField;
    private javax.swing.JLabel ticket_seller_username_jLabel;
    private javax.swing.JTextField ticket_seller_username_jTextField;
    private javax.swing.JButton update_jButton;
    // End of variables declaration//GEN-END:variables

}
